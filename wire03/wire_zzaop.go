// Code generated by gozz:wire github.com/go-zing/gozz. DO NOT EDIT.

package wire03

import (
	"io"
)

type _aop_interceptor interface {
	Intercept(v interface{}, name string, params, results []interface{}) (func(), bool)
}

// io.Writer
type (
	_aop_io_Writer      io.Writer
	_impl_aop_io_Writer struct{ _aop_io_Writer }
)

func (i _impl_aop_io_Writer) Write(p0 []byte) (r0 int, r1 error) {
	if t, x := i._aop_io_Writer.(_aop_interceptor); x {
		if up, ok := t.Intercept(i._aop_io_Writer, "Write",
			[]interface{}{&p0},
			[]interface{}{&r0, &r1},
		); up != nil {
			defer up()
		} else if !ok {
			return
		}
	}
	return i._aop_io_Writer.Write(p0)
}
